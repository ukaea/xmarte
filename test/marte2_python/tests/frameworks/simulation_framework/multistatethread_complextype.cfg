+StateMachine = {
    Class = StateMachine
    +INITIAL = {
        Class = ReferenceContainer
        +START = {
            Class = StateMachineEvent
            NextState = "STATE1"
            NextStateError = "ERROR"
            Timeout = 0
            +PrepareChangeToState1Msg = {
                Class = Message
                Destination = "App"
                Function = "PrepareNextState"
                MaxWait = "0"
                Mode = "ExpectsReply"
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = "State1"
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = "App"
                Function = "StartNextStateExecution"
                MaxWait = "0"
                Mode = "ExpectsReply"
            }
        }
    }
    +STATE1 = {
        Class = ReferenceContainer
        +ERROR = {
            Class = StateMachineEvent
            NextState = "ERROR"
            NextStateError = "ERROR"
            Timeout = 0
        }
    }
    +ERROR = {
        Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = "App"
                Function = "StopCurrentStateExecution"
                MaxWait = "0"
                Mode = "ExpectsReply"
            }
            +PrepareChangeToErrorMsg = {
                Class = Message
                Destination = "App"
                Function = "PrepareNextState"
                MaxWait = "0"
                Mode = "ExpectsReply"
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = "Error"
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = "App"
                Function = "StartNextStateExecution"
                MaxWait = "0"
                Mode = "ExpectsReply"
            }
        }
        +RESET = {
            Class = StateMachineEvent
            NextState = "STATE1"
            NextStateError = "STATE1"
            Timeout = 0
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = "App"
                Function = "StopCurrentStateExecution"
                MaxWait = "0"
                Mode = "ExpectsReply"
            }
            +PrepareChangeToState1Msg = {
                Class = Message
                Destination = "App"
                Function = "PrepareNextState"
                MaxWait = "0"
                Mode = "ExpectsReply"
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = "State1"
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = "App"
                Function = "StartNextStateExecution"
                MaxWait = "0"
                Mode = "ExpectsReply"
            }
        }
    }
}
$App = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +IOu = {
            Class = IOGAM
            InputSignals = {
                newsignal = {
                    DataSource = EPICSSubscriber
                    Type = uint32
                    Alias = a
                    PVName = 
                }
                newsignal1 = {
                    DataSource = EPICSSubscriber
                    Type = uint32
                    Alias = b
                    PVName = 
                }
            }
            OutputSignals = {
                c = {
                    DataSource = DDB0
                    Type = uint32
                    Alias = c
                }
                d = {
                    DataSource = DDB0
                    Type = uint32
                    Alias = d
                }
            }
        }
        +Constants = {
            Class = ConstantGAM
            OutputSignals = {
                newsignal = {
                    DataSource = DDB0
                    Type = float32
                    Alias = newsignal
                    Default = 2.0
                }
                newsignal1 = {
                    DataSource = DDB0
                    Type = float32
                    Alias = newsignal1
                    Default = 0.3
                }
            }
        }
        +IOy = {
            Class = IOGAM
            InputSignals = {
                newsignal2 = {
                    DataSource = EPICSSubscriberb
                    Type = aelmPkt
                    Alias = t
                }
            }
            OutputSignals = {
                r = {
                    DataSource = DDB0
                    Type = aelmPkt
                    Alias = r
                }
            }
        }
        +IOer = {
            Class = IOGAM
            InputSignals = {
                newsignal2 = {
                    DataSource = DDB0
                    Type = aelmPkt
                    Alias = r
                }
            }
            OutputSignals = {
                wefwsd = {
                    DataSource = DDB0
                    Type = aelmPkt
                    Alias = wefwsd
                }
            }
        }
        +IO = {
            Class = IOGAM
            InputSignals = {
                newsignal2 = {
                    DataSource = DDB0
                    Type = float32
                    Alias = newsignal
                }
                newsignal3 = {
                    DataSource = DDB0
                    Type = float32
                    Alias = newsignal1
                }
            }
            OutputSignals = {
                newsignal2 = {
                    DataSource = DDB0
                    Type = float32
                    Alias = newsignal2
                }
                newsignal3 = {
                    DataSource = DDB0
                    Type = float32
                    Alias = newsignal3
                }
            }
        }
        +Constantsc = {
            Class = ConstantGAM
            OutputSignals = {
                multi = {
                    DataSource = DDB0
                    Type = uint32
                    Alias = multi
                    Default = 0
                }
                threds = {
                    DataSource = DDB0
                    Type = uint32
                    Alias = threds
                    Default = 0
                }
            }
        }
        +Constantsb = {
            Class = ConstantGAM
            OutputSignals = {
                e = {
                    DataSource = DDB0
                    Type = uint32
                    Alias = e
                    Default = 0
                }
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB0
        +TimingsDataSource = {
            Class = TimingDataSource
        }
        +EPICSSubscriber = {
            Class = EPICSCA::EPICSCAInput
            StackSize = 1048576
            CPUs = 0xff
            Signals = {
                a = {
                    Type = uint32
                    PVName = 
                }
                b = {
                    Type = uint32
                    PVName = 
                }
            }
        }
        +EPICSSubscriberb = {
            Class = EPICSCA::EPICSCAInput
            StackSize = 1048576
            CPUs = 0xff
            Signals = {
                t = {
                    Type = aelmPkt
                    PVName = 
                }
            }
        }
        +DDB0 = {
            Class = GAMDataSource
        }
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0xFFFFFFFF
                    Functions = { IOu Constants IOy IOer IO }
                }
                +Thread2 = {
                    Class = RealTimeThread
                    CPUs = 0x3E8
                    Functions = { Constantsc }
                }
            }
        }
        +Error = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0xFFFFFFFF
                    Functions = { Constantsb }
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = TimingsDataSource
        MaxCycles = 0
    }
}
