+EPICSCAInterface= {
    Class = EPICS::EPICSCAClient
    StackSize = 1048576
    CPUs = 0x1
    AutoStart = 0
    +PV_STATUS = {
        Class = EPICS::EPICSPV
        PVName = "MARTE2-DEMO-APP:STATUS"
        PVType = int32
    }
    +PV_COMMAND = {
        Class = EPICS::EPICSPV
        PVName = "MARTE2-DEMO-APP:COMMAND"
        PVType = uint32
        Event = {
            Destination = StateMachine
            PVValue = Function
            FunctionMap = {{"1", "GOTORUN"}, {"0", "GOTOIDLE"}}
        }
    }
    +PV_ERROR_RST = {
        Class = EPICS::EPICSPV
        PVName = "MARTE2-DEMO-APP:RESET"
        PVType = uint32
        Event = {
            Destination = StateMachine
            PVValue = Ignore
            Function = "RESET"
        }
    }
}
+Types = {
    Class = ReferenceContainer
    +ThreadStatsStruct = {
        Class = IntrospectionStructure
        Thread1C = {
            Type = uint32
        }
        Thread1H = {
            Type = uint32
            NumberOfElements = 10
        }
    }
    +StatesStatsStruct = {
        Class = IntrospectionStructure
        Time = {
            Type = uint32
        }
        Idle = {
            Type = ThreadStatsStruct
        }
        Run = {
            Type = ThreadStatsStruct
        }
    }
    +MeasurementStruct = {
        Class = IntrospectionStructure
        Measurement0 = {
            Type = float64
        }
        Measurement1 = {
            Type = float64
        }
        Measurement2 = {
            Type = float64
        }
        Measurement3 = {
            Type = float64
        }
    }
    +ReferenceStruct = {
        Class = IntrospectionStructure
        Reference0 = {
            Type = float64
        }
        Reference1 = {
            Type = float64
        }
        Reference2 = {
            Type = float64
        }
        Reference3 = {
            Type = float64
        }
    }
    +ErrorStruct = {
        Class = IntrospectionStructure
        Error0 = {
            Type = float64
        }
        Error1 = {
            Type = float64
        }
        Error2 = {
            Type = float64
        }
        Error3 = {
            Type = float64
        }
    }
    +ControlStruct = {
        Class = IntrospectionStructure
        Control0 = {
            Type = float64
        }
        Control1 = {
            Type = float64
        }
        Control2 = {
            Type = float64
        }
        Control3 = {
            Type = float64
        }
    }
    +SignalsStruct = {
        Class = IntrospectionStructure
        Time = {
            Type = uint32
        }
        Measurements = {
            Type = MeasurementStruct
        }
        References = {
            Type = ReferenceStruct
        }
        Errors = {
            Type = ErrorStruct
        }
        Controls = {
            Type = ControlStruct
        }
    }
}
+EPICSPVADB = {
    Class = EPICSPVA::EPICSPVADatabase
    StackSize = 1048576
    CPUs = 0x1
    AutoStart = 0
    +DemoAppStatistics = {
        Class = EPICSPVA::EPICSPVARecord
        Alias = "MARTe2-Demo-App:Statistics"
        Structure = {
            value = {//Ugly name which allows to use pvget directly
                Type = StatesStatsStruct
            }
        }
    }
    +DemoAppSignals = {
        Class = EPICSPVA::EPICSPVARecord
        Alias = "MARTe2-Demo-App:Signals"
        Structure = {
            value = {//Ugly name which allows to use pvget directly
                Type = SignalsStruct
            }
        }
    }
}
+WebRoot = {
    Class = HttpObjectBrowser
    Root = "."
    +ObjectBrowse = {
        Class = HttpObjectBrowser
        Root = "/"
    }
    +ResourcesHtml = {
        Class = HttpDirectoryResource
        BaseDir = "../../MARTe2-dev/Resources/HTTP/"
    }
    +HttpMessageInterface = {
        Class = HttpMessageInterface
        +GOTOIDLE = {
            Class = Message
            Destination = StateMachine
            Function = GOTOIDLE
            Mode = ExpectsReply
        }
        +GOTORUN = {
            Class = Message
            Destination = StateMachine
            Function = GOTORUN
            Mode = ExpectsReply
        }
        +GOTOERR = {
            Class = Message
            Destination = StateMachineError
            Function = GOTOERR
            Mode = ExpectsReply
        }
    }
}
+WebServer = {
    Class = HttpService
    Port = 8084
    WebRoot = WebRoot
    Timeout = 0
    ListenMaxConnections = 255
    AcceptTimeout = 1000
    MaxNumberOfThreads = 8
    MinNumberOfThreads = 1
}
+StateMachine = {
    Class = StateMachine
    +INITIAL = {
        Class = ReferenceContainer
        +START = {
            Class = StateMachineEvent
            NextState = "IDLE"
            NextStateError = "ERROR"
            Timeout = 0
            +StartHttpServer = {
                Class = Message
                Destination = "WebServer"
                Mode = ExpectsReply
                Function = "Start"
            }
            +StartEPICSCAInterface = {
                Class = Message
                Destination = "EPICSCAInterface"
                Mode = ExpectsReply
                Function = "Start"
            }
            +StartEPICSPVAInterface = {
                Class = Message
                Destination = "EPICSPVADB"
                Mode = ExpectsReply
                Function = "Start"
            }
            +ChangeToStateIdleMsg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Idle
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
    }
    +IDLE = {
        Class = ReferenceContainer
        +GOTORUN = {
            Class = StateMachineEvent
            NextState = "RUN"
            NextStateError = "ERROR"
            Timeout = 0
            +OpenTreeMsg = {
                Class = Message
                Destination = "TestApp.Data.MDSSignalsWriter"
                Function = OpenTree
                Mode = ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 1
                }
            }
            +ChangeToRunMsg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Run
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
    }
    +RUN = {
        Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +SetStatusPV = {
                Class = Message
                Destination = "EPICSCAInterface.PV_STATUS"
                Function = CAPut
                Mode = ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 1
                }
            }
        }
        +GOTOIDLE = {
            Class = StateMachineEvent
            NextState = "IDLE"
            NextStateError = "ERROR"
            Timeout = 0
            +ChangeToIdleMsg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Idle
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
            +SetStatusPV = {
                Class = Message
                Destination = "EPICSCAInterface.PV_STATUS"
                Function = CAPut
                Mode = ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 0
                }
            }
        }
    }
    +ERROR = {
        Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +SetStatusPV = {
                Class = Message
                Destination = "EPICSCAInterface.PV_STATUS"
                Function = CAPut
                Mode = ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = -1
                }
            }
            +ChangeToErrorMsg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Error
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
        +RESET = {
            Class = StateMachineEvent
            NextState = "IDLE"
            NextStateError = "ERROR"
            Timeout = 0
            +ChangeToIdleMsg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Idle
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
            +SetStatusPV = {
                Class = Message
                Destination = "EPICSCAInterface.PV_STATUS"
                Function = CAPut
                Mode = ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 0
                }
            }
        }
    }
}
$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMMeasurements = {
            Class = IOGAM
            InputSignals = {
                Measurement0 = {
                    Type = float64
                    DataSource = DDB1
                    Default = 0
                }
                Measurement1 = {
                    Type = float64
                    DataSource = DDB1
                    Default = 0
                }
                Measurement2 = {
                    Type = float64
                    DataSource = DDB1
                    Default = 0
                }
                Measurement3 = {
                    Type = float64
                    DataSource = DDB1
                    Default = 0
                }
            }
            OutputSignals = {
                Measurement0 = {
                    Type = float64
                    DataSource = DDB1
                }
                Measurement1 = {
                    Type = float64
                    DataSource = DDB1
                }
                Measurement2 = {
                    Type = float64
                    DataSource = DDB1
                }
                Measurement3 = {
                    Type = float64
                    DataSource = DDB1
                }
            }
        }
        +GAMPLCSDNSub= {
            Class = ConversionGAM
            InputSignals = {
                Header = {
                    Type = uint8
                    NumberOfElements = 48
                    DataSource = SDNPLCSub
                    Frequency = 1
                }
                Reference0 = {
                    Type = float32
                    NumberOfElements = 1
                    NumberOfDimensions = 1
                    DataSource = SDNPLCSub
                }
                Reference1 = {
                    Type = float32
                    NumberOfElements = 1
                    NumberOfDimensions = 1
                    DataSource = SDNPLCSub
                }
                Reference2 = {
                    Type = float32
                    NumberOfElements = 1
                    NumberOfDimensions = 1
                    DataSource = SDNPLCSub
                }
                Reference3 = {
                    Type = float32
                    NumberOfElements = 1
                    NumberOfDimensions = 1
                    DataSource = SDNPLCSub
                }
                Idle_Thread1_CycleTime = {
                    Type = uint32
                    DataSource = Timings
                    Alias = "Idle.Thread1_CycleTime"
                }
                Run_Thread1_CycleTime = {
                    Type = uint32
                    DataSource = Timings
                    Alias = "Idle.Thread1_CycleTime"
                }
            }
            OutputSignals = {
                PLCSDNHeader = {
                    Type = uint8
                    NumberOfElements = 48
                    DataSource = DDB1
                }
                Reference0 = {
                    Type = float64
                    NumberOfElements = 1
                    NumberOfDimensions = 1
                    DataSource = DDB1 
                }
                Reference1 = {
                    Type = float64
                    NumberOfElements = 1
                    NumberOfDimensions = 1
                    DataSource = DDB1 
                }
                Reference2 = {
                    Type = float64
                    NumberOfElements = 1
                    NumberOfDimensions = 1
                    DataSource = DDB1 
                }
                Reference3 = {
                    Type = float64
                    NumberOfElements = 1
                    NumberOfDimensions = 1
                    DataSource = DDB1 
                }
                Idle_Thread1_CycleTime = {
                    Type = uint32
                    DataSource = DDB1
                }
                Run_Thread1_CycleTime = {
                    Type = uint32
                    DataSource = DDB1
                }
            }
        }
        +GAMPLCTime0 = {
            Class = IOGAM
            InputSignals = {
                PLCSDNHeader = {
                    Type = uint8
                    NumberOfElements = 48
                    Ranges = {{32, 39}}
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                Time64Bits = {
                    Type = uint64
                    DataSource = DDB1
                }
            }
        }
        +GAMPLCTime1 = {
            Class = ConversionGAM
            InputSignals = {
                Time64Bits = {
                    Type = uint64
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                Time = {
                    Type = uint32
                    DataSource = DDB1
                }
            }
        }
        +GAMHistogramCycleTimes = {
            Class = HistogramGAM
            BeginCycleNumber = 10
            StateChangeResetName = All
            InputSignals = {
                Idle_Thread1_CycleTime = {
                    DataSource = DDB1
                    Type = uint32
                    MinLim = 4000
                    MaxLim = 6000
                }
                Run_Thread1_CycleTime = {
                    DataSource = DDB1
                    Type = uint32
                    MinLim = 4000
                    MaxLim = 6000
                }
            }
            OutputSignals = {
                Idle_Thread1_CycleTime_Stats = {
                    DataSource = DDB1
                    NumberOfElements = 10
                    Type = uint32
                }
                Run_Thread1_CycleTime_Stats = {
                    DataSource = DDB1
                    NumberOfElements = 10
                    Type = uint32
                }
            }
        }
        +GAMSSM = {
            Class = SSMGAM
            StateMatrix = {
                {1 0 0 0 0 0 0 0}
                {0 1 0 0 0 0 0 0}
                {0 0 1 0 0 0 0 0}
                {0 0 0 1 0 0 0 0}
                {0 0 0 0 0 0 0 0}
                {0 0 0 0 0 0 0 0}
                {0 0 0 0 0 0 0 0}
                {0 0 0 0 0 0 0 0}
            }
            InputMatrix = {
                {20e-3 0 0 0 -20e-3 0 0 0}
                {0 20e-3 0 0 0 -20e-3 0 0}
                {0 0 20e-3  0 0 0 -20e-3 0}
                {0 0 0 20e-3 0 0 0 -20e-3}
                {0 0 0 0 0 0 0 0}
                {0 0 0 0 0 0 0 0}
                {0 0 0 0 0 0 0 0}
                {0 0 0 0 0 0 0 0}
            }
            OutputMatrix = {
                {0 0 0 0 0 0 0 0}
                {0 0 0 0 0 0 0 0}
                {0 0 0 0 0 0 0 0}
                {0 0 0 0 0 0 0 0}
                {1 0 0 0 0 0 0 0}
                {0 1 0 0 0 0 0 0}
                {0 0 1 0 0 0 0 0}
                {0 0 0 1 0 0 0 0}
            }
            FeedthroughMatrix = {
                {1 0 0 0 -1 0 0 0}
                {0 1 0 0 0 -1 0 0}
                {0 0 1 0 0 0 -1 0}
                {0 0 0 1 0 0 0 -1}
                {1 0 0 0 -1 0 0 0}
                {0 1 0 0 0 -1 0 0}
                {0 0 1 0 0 0 -1 0}
                {0 0 0 1 0 0 0 -1}
            }
            ResetInEachState = 0
            InputSignals = {
                Reference0 = {
                    Type = float64
                    DataSource = DDB1
                }
                Reference1 = {
                    Type = float64
                    DataSource = DDB1
                }
                Reference2 = {
                    Type = float64
                    DataSource = DDB1
                }
                Reference3 = {
                    Type = float64
                    DataSource = DDB1
                }
                Measurement0 = {
                    Type = float64
                    DataSource = DDB1
                }
                Measurement1 = {
                    Type = float64
                    DataSource = DDB1
                }
                Measurement2 = {
                    Type = float64
                    DataSource = DDB1
                }
                Measurement3 = {
                    Type = float64
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                Error0 = {
                    Type = float64
                    DataSource = DDB1
                }
                Error1 = {
                    Type = float64
                    DataSource = DDB1
                }
                Error2 = {
                    Type = float64
                    DataSource = DDB1
                }
                Error3 = {
                    Type = float64
                    DataSource = DDB1
                }
                Control0 = {
                    Type = float64
                    DataSource = DDB1
                }
                Control1 = {
                    Type = float64
                    DataSource = DDB1
                }
                Control2 = {
                    Type = float64
                    DataSource = DDB1
                }
                Control3 = {
                    Type = float64
                    DataSource = DDB1
                }
                State0 = {
                    Type = float64
                    DataSource = DDB1
                }
                State1 = {
                    Type = float64
                    DataSource = DDB1
                }
                State2 = {
                    Type = float64
                    DataSource = DDB1
                }
                State3 = {
                    Type = float64
                    DataSource = DDB1
                }
                State4 = {
                    Type = float64
                    DataSource = DDB1
                }
                State5 = {
                    Type = float64
                    DataSource = DDB1
                }
                State6 = {
                    Type = float64
                    DataSource = DDB1
                }
                State7 = {
                    Type = float64
                    DataSource = DDB1
                }
            }
        }
        +GAMPLCSDNPub = {
            Class = ConversionGAM
            InputSignals = {
                Measurement0 = {
                    Type = float64
                    NumberOfElements = 1
                    DataSource = DDB1
                }
                Measurement1 = {
                    Type = float64
                    NumberOfElements = 1
                    DataSource = DDB1
                }
                Measurement2 = {
                    Type = float64
                    NumberOfElements = 1
                    DataSource = DDB1
                }
                Measurement3 = {
                    Type = float64
                    NumberOfElements = 1
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                Measurement0 = {
                    Type = float32
                    NumberOfElements = 1
                    DataSource = SDNPLCPub
                }
                Measurement1 = {
                    Type = float32
                    NumberOfElements = 1
                    DataSource = SDNPLCPub
                }
                Measurement2 = {
                    Type = float32
                    NumberOfElements = 1
                    DataSource = SDNPLCPub
                }
                Measurement3 = {
                    Type = float32
                    NumberOfElements = 1
                    DataSource = SDNPLCPub
                    Trigger = 1
                }
            }
        }
        +GAMPerformanceWriter = {
            Class = IOGAM
            InputSignals = {
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
                Idle_Thread1_CycleTime = {
                    DataSource = DDB1
                    Type = uint32
                }
                Idle_Thread1_CycleTime_Stats = {
                    DataSource = DDB1
                    Type = uint32
                    NumberOfElements = 10
                }
                Run_Thread1_CycleTime = {
                    DataSource = DDB1
                    Type = uint32
                }
                Run_Thread1_CycleTime_Stats = {
                    DataSource = DDB1
                    Type = uint32
                    NumberOfElements = 10
                }
            }
            OutputSignals = {
                Time = {
                    DataSource = PerformanceWriter
                    Alias = "value.Time"
                    Type = uint32
                }
                Idle_Thread1_CycleTime = {
                    DataSource = PerformanceWriter
                    Alias = "value.Idle.Thread1C"
                    Type = uint32
                }
                Idle_Thread1_CycleTime_Stats = {
                    DataSource = PerformanceWriter
                    Alias = "value.Idle.Thread1H"
                    Type = uint32
                    NumberOfElements = 10
                }
                Run_Thread1_CycleTime = {
                    DataSource = PerformanceWriter
                    Alias = "value.Run.Thread1C"
                    Type = uint32
                }
                Run_Thread1_CycleTime_Stats = {
                    DataSource = PerformanceWriter
                    Alias = "value.Run.Thread1H"
                    Type = uint32
                    NumberOfElements = 10
                }
            }
        }
        +GAMSignalsWriter = {
            Class = IOGAM
            InputSignals = {
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
                Reference0 = {
                    DataSource = DDB1
                    Type = float64
                }
                Reference1 = {
                    DataSource = DDB1
                    Type = float64
                }
                Reference2 = {
                    DataSource = DDB1
                    Type = float64
                }
                Reference3 = {
                    DataSource = DDB1
                    Type = float64
                }
                Measurement0 = {
                    DataSource = DDB1
                    Type = float64
                }
                Measurement1 = {
                    DataSource = DDB1
                    Type = float64
                }
                Measurement2 = {
                    DataSource = DDB1
                    Type = float64
                }
                Measurement3 = {
                    DataSource = DDB1
                    Type = float64
                }
                Error0 = {
                    Type = float64
                    DataSource = DDB1
                }
                Error1 = {
                    Type = float64
                    DataSource = DDB1
                }
                Error2 = {
                    Type = float64
                    DataSource = DDB1
                }
                Error3 = {
                    Type = float64
                    DataSource = DDB1
                }
                Control0 = {
                    Type = float64
                    DataSource = DDB1
                }
                Control1 = {
                    Type = float64
                    DataSource = DDB1
                }
                Control2 = {
                    Type = float64
                    DataSource = DDB1
                }
                Control3 = {
                    Type = float64
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                Time = {
                    DataSource = SignalsWriter
                    Type = uint32
                    Alias = "value.Time"
                }
                Reference0 = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.References.Reference0"
                }
                Reference1 = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.References.Reference1"
                }
                Reference2 = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.References.Reference2"
                }
                Reference3 = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.References.Reference3"
                }
                Measurement0 = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.Measurements.Measurement0"
                }
                Measurement1 = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.Measurements.Measurement1"
                }
                Measurement2 = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.Measurements.Measurement2"
                }
                Measurement3 = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.Measurements.Measurement3"
                }
                Error0 = {
                    Type = float64
                    DataSource = SignalsWriter
                    Alias = "value.Errors.Error0"
                }
                Error1 = {
                    Type = float64
                    DataSource = SignalsWriter
                    Alias = "value.Errors.Error1"
                }
                Error2 = {
                    Type = float64
                    DataSource = SignalsWriter
                    Alias = "value.Errors.Error2"
                }
                Error3 = {
                    Type = float64
                    DataSource = SignalsWriter
                    Alias = "value.Errors.Error3"
                }
                Control0 = {
                    Type = float64
                    DataSource = SignalsWriter
                    Alias = "value.Controls.Control0"
                }
                Control1 = {
                    Type = float64
                    DataSource = SignalsWriter
                    Alias = "value.Controls.Control1"
                }
                Control2 = {
                    Type = float64
                    DataSource = SignalsWriter
                    Alias = "value.Controls.Control2"
                }
                Control3 = {
                    Type = float64
                    DataSource = SignalsWriter
                    Alias = "value.Controls.Control3"
                }
            }
        }
        +GAMMDSSignalsWriter = {
            Class = IOGAM
            InputSignals = {
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
                Reference0 = {
                    DataSource = DDB1
                    Type = float64
                }
                Reference1 = {
                    DataSource = DDB1
                    Type = float64
                }
                Reference2 = {
                    DataSource = DDB1
                    Type = float64
                }
                Reference3 = {
                    DataSource = DDB1
                    Type = float64
                }
                Measurement0 = {
                    DataSource = DDB1
                    Type = float64
                }
                Measurement1 = {
                    DataSource = DDB1
                    Type = float64
                }
                Measurement2 = {
                    DataSource = DDB1
                    Type = float64
                }
                Measurement3 = {
                    DataSource = DDB1
                    Type = float64
                }
                Error0 = {
                    Type = float64
                    DataSource = DDB1
                }
                Error1 = {
                    Type = float64
                    DataSource = DDB1
                }
                Error2 = {
                    Type = float64
                    DataSource = DDB1
                }
                Error3 = {
                    Type = float64
                    DataSource = DDB1
                }
                Control0 = {
                    Type = float64
                    DataSource = DDB1
                }
                Control1 = {
                    Type = float64
                    DataSource = DDB1
                }
                Control2 = {
                    Type = float64
                    DataSource = DDB1
                }
                Control3 = {
                    Type = float64
                    DataSource = DDB1
                }
                Run_Thread1_CycleTime = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
            OutputSignals = {
                Time = {
                    DataSource = MDSSignalsWriter
                    Type = uint32
                }
                Reference0 = {
                    DataSource = MDSSignalsWriter
                    Type = float64
                }
                Reference1 = {
                    DataSource = MDSSignalsWriter
                    Type = float64
                }
                Reference2 = {
                    DataSource = MDSSignalsWriter
                    Type = float64
                }
                Reference3 = {
                    DataSource = MDSSignalsWriter
                    Type = float64
                }
                Measurement0 = {
                    DataSource = MDSSignalsWriter
                    Type = float64
                }
                Measurement1 = {
                    DataSource = MDSSignalsWriter
                    Type = float64
                }
                Measurement2 = {
                    DataSource = MDSSignalsWriter
                    Type = float64
                }
                Measurement3 = {
                    DataSource = MDSSignalsWriter
                    Type = float64
                }
                Error0 = {
                    Type = float64
                    DataSource = MDSSignalsWriter 
                }
                Error1 = {
                    Type = float64
                    DataSource = MDSSignalsWriter 
                }
                Error2 = {
                    Type = float64
                    DataSource = MDSSignalsWriter 
                }
                Error3 = {
                    Type = float64
                    DataSource = MDSSignalsWriter 
                }
                Control0 = {
                    Type = float64
                    DataSource = MDSSignalsWriter 
                }
                Control1 = {
                    Type = float64
                    DataSource = MDSSignalsWriter 
                }
                Control2 = {
                    Type = float64
                    DataSource = MDSSignalsWriter 
                }
                Control3 = {
                    Type = float64
                    DataSource = MDSSignalsWriter 
                }
                Run_Thread1_CycleTime = {
                    Type = uint32
                    DataSource = MDSSignalsWriter 
                }
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +PerformanceWriter = {
            Class = EPICSPVADataSource::EPICSPVAOutput
            StackSize = 1048576
            CPUs = 0x1
            IgnoreBufferOverrun = 1
            NumberOfBuffers = 10
            Signals = {
                value = {//Ugly name which allows to use pvget directly
                    Alias = "MARTe2-Demo-App:Statistics"
                    Type = StatesStatsStruct
                }
            }
        }
        +SignalsWriter = {
            Class = EPICSPVADataSource::EPICSPVAOutput
            StackSize = 1048576
            CPUs = 0x1
            IgnoreBufferOverrun = 1
            NumberOfBuffers = 10
            Signals = {
                value = {
                    Alias = "MARTe2-Demo-App:Signals"
                    Type = SignalsStruct
                }
            }
        }
        +MDSSignalsWriter = {
            Class = MDSWriter::MDSWriter
            NumberOfBuffers = 120000
            CPUMask = 0x2
            StackSize = 10000000
            TreeName = "rtappdemo"
            StoreOnTrigger = 0
            NumberOfPreTriggers = 0
            NumberOfPostTriggers = 0
            EventName = "IgnoreMe"
            TimeRefresh = 5
            Signals = {
                Time = {
                    SignalType = uint32
                    TimeSignal = 1
                    TimeSignalMultiplier = 1e-3
                }
                Measurement0 = {
                    NodeName = "INP.MEAS0"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "INP.MEAS0D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Measurement1 = {
                    NodeName = "INP.MEAS1"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "INP.MEAS1D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Measurement2 = {
                    NodeName = "INP.MEAS2"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "INP.MEAS2D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Measurement3 = {
                    NodeName = "INP.MEAS3"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "INP.MEAS3D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Reference0 = {
                    NodeName = "REFS.REF0"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "REFS.REF0D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Reference1 = {
                    NodeName = "REFS.REF1"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "REFS.REF1D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Reference2 = {
                    NodeName = "REFS.REF2"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "REFS.REF2D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Reference3 = {
                    NodeName = "REFS.REF3"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "REFS.REF3D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Control0 = {
                    NodeName = "CONTROLS.CONTROL0"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "CONTROLS.CONTROL0D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Control1 = {
                    NodeName = "CONTROLS.CONTROL1"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "CONTROLS.CONTROL1D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Control2 = {
                    NodeName = "CONTROLS.CONTROL2"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "CONTROLS.CONTROL2D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Control3 = {
                    NodeName = "CONTROLS.CONTROL3"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "CONTROLS.CONTROL3D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Error0 = {
                    NodeName = "ERRORS.ERROR0"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "ERRORS.ERROR0D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Error1 = {
                    NodeName = "ERRORS.ERROR1"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "ERRORS.ERROR1D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Error2 = {
                    NodeName = "ERRORS.ERROR2"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "ERRORS.ERROR2D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Error3 = {
                    NodeName = "ERRORS.ERROR3"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "ERRORS.ERROR3D"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
                Run_Thread1_CycleTime = {
                    NodeName = "PERF.CYCLET"
                    Period = 20e-3
                    MakeSegmentAfterNWrites = 200
                    DecimatedNodeName = "PERF.CYCLETD"
                    MinMaxResampleFactor = 100
                    SamplePhase = 0
                    AutomaticSegmentation = 0
                }
            }
        }
        +SDNPLCSub = {
            Class = SDN::SDNSubscriber
            Interface = eno2
            //Interface = lo //DEBUG ONLY
            Address = "192.168.1.2:2000" 
            //Address = "127.0.0.1:2000" //DEBUG ONLY
            Topic = Ignored
            //Timeout = 100
            CPUs = 0x8
            Signals = {
            	Header = {
                     Type = uint8
                     NumberOfElements = 48
                }
                Reference0 = {
            		Type = float32
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
                Reference1 = {
            		Type = float32
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
                Reference2 = {
            		Type = float32
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
                Reference3 = {
            		Type = float32
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
            }
        }
        +SDNPLCPub= {
            Class = SDN::SDNPublisher            
            Interface = eno2
            //Interface = lo
            Address = "192.168.1.89:2000"
            //Address = "127.0.0.1:2002" //DEBUG ONLY
            Topic = AlsoIgnored
            Signals = {
            	Locked = 1           
                Measurement0 = {
                     Type = float32
                     NumberOfElements = 1
                }
                Measurement1 = {
                     Type = float32
                     NumberOfElements = 1
                }
                Measurement2 = {
                     Type = float32
                     NumberOfElements = 1
                }
                Measurement3 = {
                     Type = float32
                     NumberOfElements = 1
                }
            }
        }
    }
    +States = {
        Class = ReferenceContainer
        +Idle = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x4
                    Functions = {GAMPLCSDNSub GAMPLCTime0 GAMPLCTime1 GAMMeasurements GAMSSM GAMPLCSDNPub GAMSignalsWriter GAMHistogramCycleTimes GAMPerformanceWriter }
                }
            }
        }
        +Run = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x4
                    Functions = {GAMPLCSDNSub GAMPLCTime0 GAMPLCTime1 GAMMeasurements GAMSSM GAMPLCSDNPub GAMSignalsWriter GAMHistogramCycleTimes GAMPerformanceWriter GAMMDSSignalsWriter }
                }
            }
        }
        +Error = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x4
                    Functions = {GAMPLCSDNSub GAMPLCTime0 GAMPLCTime1 GAMMeasurements GAMPLCSDNPub}
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
