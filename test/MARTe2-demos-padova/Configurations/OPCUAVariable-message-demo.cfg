+OPCUATypes = {
    Class = ReferenceContainer
    +FDAQ = {
        Class = IntrospectionStructure
        PulseStart = {
            Type = uint32
            NumberOfElements = 1
        }
        FastStatus = {
            Type = uint32
            NumberOfElements = 1
        }
        
    }
    +AUX = {
        Class = IntrospectionStructure
        FDAQ = {
            Type = FDAQ
            NumberOfElements = 1
        }
    }
    +TEST = {
        Class = IntrospectionStructure
            AUX = {
            Type =AUX
            NumberOfElements = 1
        }
    }
}
+StateMachine = {
    Class = StateMachine
    +INITIAL = {
        Class = ReferenceContainer
        +START = {
            Class = StateMachineEvent
            NextState = "STATE1"
            NextStateError = "ERROR"
            Timeout = 0
            +ChangeToState1Msg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = State1
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
    }
    +STATE1 = {
        Class = ReferenceContainer
        +GOTOSTATE2 = {
            Class = StateMachineEvent
            NextState = "STATE2"
            NextStateError = "ERROR"
            Timeout = 0
            +SetStatusPV = {
                Class = Message
                Destination = "OPCUA_CA.PV_STATUS2"
                Function = OPCUAWrite
                Mode = ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 12
                }
            }           
            +PrepareChangeToState2Msg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = State2
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
        +ERROR = {
            Class = StateMachineEvent
            NextState = "ERROR"
            NextStateError = "ERROR"
        }
    }
    +STATE2 = {
        Class = ReferenceContainer
        +GOTOSTATE1 = {
            Class = StateMachineEvent
            NextState = "STATE1"
            NextStateError = "ERROR"
            Timeout = 0
         +SetStatusPV = {
                Class = Message
                Destination = "OPCUA_CA.PV_STATUS2"
                Function = OPCUAWrite
                Mode = ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 0
                }
            }           
            +PrepareChangeToState1Msg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = State1
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
            
        }
        +ERROR = {
            Class = StateMachineEvent
            NextState = "ERROR"
            NextStateError = "ERROR"
        }
    }
    +ERROR = {
        Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +PrepareChangeToErrorMsg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = StateError
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
        +RESET = {
            Class = StateMachineEvent
            NextState = "STATE1"
            NextStateError = "STATE1"
            Timeout = 0
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +PrepareChangeToState1Msg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = State1
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
    }
}

+OPCUA_CA = {
        Class = OPCUA::OPCUAClient
    StackSize = 1048576
    CPUs = 0x2
    AutoStart = 1
    Address = "opc.tcp://localhost:4840"
    +PV_START = {
        Class = OPCUA::OPCUAVariable
        Path = "TEST.AUX.FDAQ.PulseStart"
        Type = uint32
        NameSpaceIndex=1
        NumberOfElements = 1
        Event = {
          Destination = StateMachine
          PVValue = Function
          FunctionMap = {{"0", "ERROR"}, {"1", "GOTOSTATE1"}, {"2", "GOTOSTATE2"}}
            }
    }   
    +PV_STATUS2 = {
        Class = OPCUA::OPCUAVariable
        Path = "TEST.AUX.FDAQ.FastStatus"
        Type = uint32
        NameSpaceIndex=1
        NumberOfElements = 1
    }   
}

$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = 10
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = { 
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }            
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }            
            }
        }
        +GAMDisplay = {
            Class = IOGAM            
            InputSignals = {
                AUX = {
                    DataSource = OPCUAIn
                    Type = AUX
                }
            } 
            OutputSignals = {
        AUX = {
                    DataSource = LoggerDataSource
                    Type = AUX
                } 
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }   
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +OPCUAIn = {
            Class = OPCUADataSource::OPCUADSInput
            Address = "opc.tcp://localhost:4840"
            Synchronise = "no"
            Signals = {
               AUX = {
                    NamespaceIndex = 1
                    Path = TEST.AUX
                    Type = AUX
                    NumberOfElements = 1
                }
            }
        } 
        
        +Timings = {
            Class = TimingDataSource
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x2
                    Functions = {GAMTimer}
                }
            }
        }  
        +State2 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x2
                    Functions = {GAMTimer GAMDisplay}
                }
            }
        }
        +Error = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x2
                    Functions = {GAMTimer}
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
